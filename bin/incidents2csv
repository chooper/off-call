#!/usr/bin/env ruby
# coding: utf-8

require 'rest_client'
require 'cgi'
require 'time'
require 'json'
require 'csv'
require 'chronic'

class Time
  def iso8601
    self.utc.strftime('%Y%m%dT%H%M%SZ')
  end
end

class String
  def to_time
    Time.parse(self) rescue Chronic.parse(self)
  end
end

services = {
  ion: "PCV9AVS",
  ops_api: "PCW414B",
  ops_pingdom: "PKIUP92"
}


user, password = ENV['AUTH'].to_s.split(":").map{|e| CGI.escape(e) }

since = ENV["SINCE"].to_time rescue "Last Week".to_time
params = {
  'since' => since.iso8601,
  'until' => Time.now.iso8601,
  'service' => services.values.join(",")
}
params_string = params.map{|k,v| "#{k}=#{v}" }.join('&')

json = RestClient.get(%(https://#{user}:#{password}@heroku.pagerduty.com/api/v1/incidents?#{params_string}))
data = JSON.parse(json)

CSV.open("incidents.csv", "wb") do |csv|
  csv << ["Service", "Id", "Date", "Resolved By", "Summary", "Root Cause", "Remediation"]

  data["incidents"].each do |i|
    row = [
           i["service"]["name"],
           %(=HYPERLINK("#{i["html_url"]}","#{i["id"]}")),
           i["created_on"],
          ]

    if i["last_status_change_by"]
      row << i["last_status_change_by"]["name"]
    else
      row << ""
    end

    if i["trigger_summary_data"]
      row << i["trigger_summary_data"]["description"]
    else
      row << i["incident_key"]
    end

    csv << row
  end
end
